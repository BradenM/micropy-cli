# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [master]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [master]
  schedule:
    - cron: "24 9 * * 4"

env:
  POETRY_VERSION: 1.3.1
  POETRY_VIRTUALENVS_IN_PROJECT: true
  POETRY_NO_INTERACTION: 1
  POETRY_URL: https://install.python-poetry.org

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["python"]
        include:
          - language: python
            python: "3.10"
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        id: python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install Poetry
        run: |
          curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      # Poetry cache depends on OS, Python version and Poetry version.
      - name: Get Poetry Cache Path
        id: poetry-config
        run: |
          echo "cache-dir=$(poetry config cache-dir)" >> $GITHUB_OUTPUT

      # Poetry cache depends on OS, Python version and Poetry version.
      - name: Cache Poetry cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.poetry-config.outputs.cache-dir }}
          key: poetry-cache-${{ runner.os }}-${{ matrix.python }}-${{ env.POETRY_VERSION }}
          restore-keys: |
            poetry-cache-${{ runner.os }}-${{ matrix.python }}-

      # virtualenv cache should depends on OS, Python version and `poetry.lock`
      - name: Cache Packages
        uses: actions/cache@v3
        id: pkg-cache
        with:
          path: .venv
          key: poetry-${{ runner.os }}-${{ matrix.python }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-${{ matrix.python }}-

      - name: Install Dependencies
        if: steps.pkg-cache.outputs.cache-hit != 'true'
        run: poetry install --with docs --with test -v

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        env:
          CODEQL_PYTHON: ./.venv/bin/python
        with:
          languages: ${{ matrix.language }}
          setup-python-dependencies: false
          config-file: ./.github/codeql/codeql-config.yml
          source-root: micropy
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      - name: Perform CodeQL Analysis
        env:
          CODEQL_PYTHON: ./.venv/bin/python
        uses: github/codeql-action/analyze@v2
